pipeline {
    agent {
        label 'jenkins-kuber-slave'
    }

    environment {
        dockerImageName = 'gitea'
        dockerImage = ''

        CREDENTIALS_ID = 'giteaCreds'
        REPO_NAME = 'PerviyYegor/gitea'
    }

    stages {
        stage('Build image') {
            steps {
                container('jenkins-kuber-slave-dind') {
                    withCredentials([usernameColonPassword(credentialsId: CREDENTIALS_ID, variable: 'TOKEN')]) {
                        sh '''
                        docker build --rm --no-cache -t gitea:latest --build-arg TOKEN=$TOKEN --build-arg REPO=$REPO_NAME ./giteaApp
                        '''
                    }
                }
            }
        }

        stage('Deploying Gitea container to Kubernetes') {
            steps {
                withKubeConfig([namespace: 'default']) {
                    container('jenkins-kuber-slave-dind') {
                        sh 'kubectl delete -f ./giteaApp/gitea-deployment.yaml || true'
                        sh 'kubectl apply -f ./giteaApp --validate=false'
                    }
                }
            }
        }
    }
}
